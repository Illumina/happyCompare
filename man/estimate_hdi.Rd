% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis.R
\name{estimate_hdi}
\alias{estimate_hdi}
\title{Estimate highest density intervals (HDIs) from performance counts}
\usage{
estimate_hdi(df, successes_col, totals_col, group_cols, aggregate_only = TRUE,
  significance = 0.05, sample_size = 1e+05, max_alpha1 = 1000)
}
\arguments{
\item{df}{A \code{data.frame}. Required columns: \code{Replicate.Id}, \code{Subset}, columns specified
in \code{group_cols} argument.}

\item{successes_col}{Name of the column that contains success counts.}

\item{totals_col}{Name of the column that contains total counts.}

\item{group_cols}{Vector of columns to group counts by. Observations
within the same group will be treated as replicates.}

\item{aggregate_only}{Estimate HDIs for aggregate replicate only
(speeds up execution). Default: TRUE.}

\item{significance}{Significance for HDI estimation. Default: 0.05 (= 95\% HDIs).}

\item{sample_size}{Number of observations to draw from the Beta posterior
to estimate HDIs. Default: 1e5.}

\item{max_alpha1}{Upper bound for alpha hyperparameter in the aggregate Beta posterior.}
}
\value{
A \code{data.frame} with performance counts, model hyperparameters,
success rate and HDI estimates.
}
\description{
Estimate highest density intervals and success rates from hap.py counts using a
Binomial model and empirical Bayes. See package docs for details on method
implementation.
}
\examples{

\dontrun{
hdi <- estimate_hdi(df, successes_col = 'TRUTH.TP', totals_col = 'TRUTH.TOTAL', 
                   group_cols = c('Group.Id', 'Subset', 'Type', 'Subtype'))
}

}
